# 다운로드받은 압축 폴더를 D드라이브로 전송
tar -xvzf "C:\Users\부창규\Downloads\v1.0-trainval01_blobs.tgz" -C "D:\nuscene_data\v1.0-trainval01_blobs"

"""
# D드라이브로 전송할때 temp가 c에 있으면 디스크 가득참 발생. 해결법

Remove-Item "$env:TEMP\*" -Recurse -Force #관리자권한으로 수행

$env:TEMP = "D:\Temp"
$env:TMP = "D:\Temp"
New-Item -Path "D:\Temp" -ItemType Directory -Force

"""

# nuscene 사이트 주소
https://www.nuscenes.org/download

# 인풋 입력 - > backbone -> feature -> neck -> fpn feature ->

# 전체 모델 파이프라인 구조
keypoint_generate -> gaussian_encoder -> query, key
keypoint_generate -> deformable_attention + query,key -> decoder -> refinement

"""

refinement

gaussian keypoint generation

sparse conv

anchor encoder :



gaussian encoder : lifter의 output을 input으로 받아서 이걸 output으로 다 더해서 내보냄

gaussian paramter로 anchor + offset을 받고 그 다음에 이것을 바탕으로,
keypoint를 생성한다.(각 가우시안을 중심흐오 하는 여러 3d point를 뽑는다.(분포 샘플)

deformable은  keypoint 생성 후 이미지에서 2D 위치에 대응되는 feature를 뽑고, 잘 조합(fuse)하기 위한 모듈

keypoint를 multi-camera view에서 2D 위치로 투영

그리고 interpolation해줘야한다.(feature실수인데 이미지 feautre map은 정수여야하므로)

```
. 이 keypoint들을 voxel grid에 할당
(x, y, z)를 voxel 좌표 (i, j, k)로 매핑

python
복사
편집
voxel_coord = ((xyz - pc_range) / voxel_size).int()
```

keypoint (3D)
 → 3D 공간 내 위치 정보 이용 -> voxel grid에 할당
 → SparseConv 적용 (3D or 4D)
 → 이후 결과를 2D에 투영하거나, BEV로 collapse


SparseConv를 쓰기 위한 전처리 + 후처리
xyz → grid → index 과정은 무조건 필수라 완전 생략은 불가.


"""

workflow : data_process -> backbone -> neck -> lifter ->

"""

